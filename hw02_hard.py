# Задание-1: уравнение прямой вида y = kx - b задано ввиде строки.
# Определить координату y, точки с заданной координатой x

equation = 'y = -12x + 11111140.2121'
x = 2.5
# вычислите и выведите y

# Задание-2: Дата задана в виде строки формата 'dd.mm.yyyy'. Проверить, корректно ли введена дата.
# Условия корректности:
# 1. День должен приводиться к целому числу в диапазоне от 1 до 30(31) (в зависимости от месяца, февраль не учитываем)
# 2. Месяц должен приводиться к целому числу в диапазоне от 1 до 12
# 3. Год должен приводиться к целому положительному числу в диапазоне от 1 до 9999
# 4. Длина исходной строки для частей должна быть в соответствии с форматом (т.е. 2 - для дня, 2- месяц, 4 -год)

# Пример корректной даты
date = '01.11.1985'

# Примеры некорректных дат
date = '01.22.1001'
date = '1.12.1001'
date = '-2.10.3001'

# Задание-3: "Перевернутая башня" (Задача олимпиадного уровня)
#
# Вавилонцы решили построить удивительную башню — расширяющуюся к верху и содержащую бесконечное число этажей и комнат.
# Она устроена следующим образом — на первом этаже одна комната, затем идет два этажа,
# на каждом из которых по две комнаты, затем идёт три этажа, на каждом из которых по три комнаты и так далее:
#         ...
#     12  13  14
#     9   10  11
#     6   7   8
#       4   5
#       2   3
#         1
#
# Эту башню решили оборудовать лифтом --- и вот задача: нужно научиться по номеру комнаты определять,
# на каком этаже она находится и какая она по счету слева на этом этаже.
#
# Входные данные: В первой строчке задан номер комнаты N, 1 ≤ N ≤ 2 000 000 000.
#
# Выходные данные:  Два целых числа — номер этажа и порядковый номер слева на этаже.
#
# Пример:
# Вход: 13
# Выход: 6 2
#
# Вход: 11
# Выход: 5 3

def babylon_tower(n):
    def walk(our_room,room, floor,room_on_floor):
        room_on_floor += 1
        new_room = room+ room_on_floor**2
        if new_room>=our_room:
            room_in_block = our_room-room
            return (floor+(room_in_block-1)//room_on_floor+1,(room_in_block-1)%room_on_floor+1)
        else:
            floor += room_on_floor
            return walk(our_room,new_room, floor,room_on_floor)
    if n == 1:
        return (1,1)
    if 1<n<=2000000:
        return walk(n, 1, 1, 1)
    else:
        return "Неверный порядковый номер"



# tests

def test(text,got, expected):
    prefix = "OK" if got == expected else "X"
    print("{0} - Тест: {1} | Получено: {2} | Ожидалось: {3}".format(prefix, text, repr(got), repr(expected)))

print("Задание-3: Перевернутая башня")
test("14",babylon_tower(14),(6,3))
test("15",babylon_tower(15),(7,1))
test("25",babylon_tower(25),(9,3))
test(" 9",babylon_tower(9),(5,1))
test(" 2",babylon_tower(2),(2,1))
test(" 3",babylon_tower(3),(2,2))
test(" 1",babylon_tower(1),(1,1))
test(" 0",babylon_tower(0),"Неверный порядковый номер")
test("1999999",babylon_tower(1999999),(1,1))
